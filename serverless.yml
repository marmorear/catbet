org: marmorear
app: catbet
service: catbet

plugins:
  # npm i serverless-dynamodb-local --save-dev && sls dynamodb install
  - serverless-dynamodb-local
  - serverless-offline


custom:
  dynamodb:
    port: 8000
    stages:
      - dev
    start:
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
    seed:
      domain:
        sources:
          - table: CATS
   

provider:
  name: aws
  runtime: nodejs12.x

  # you can overwrite defaults here
  stage: dev
  region: us-east-1
  environment:
   CATS_TABLE: 'cat-bet-${opt:stage, self:provider.stage}'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
          Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.CATS_TABLE}'

functions:
  listarPeixes:
    handler: handler.listarPeixes
    name: listarPeixes
    events:
      - http:
          path: catbet/listaPeixes
          method: get

  listarAposta:
    handler: handler.listarAposta
    name: listarAposta
    events:
      - http:
          path: catbet/lista/{catName}
          method: get

  criaAposta:
    handler: handler.criaAposta
    name: criaAposta
    events:
      - http:
          path: catbet/criaAposta/{catName}
          method: post



resources:
  Resources:
    CatsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.CATS_TABLE}
        AttributeDefinitions:
          - AttributeName: cat_name
            AttributeType: S
        KeySchema:
          - AttributeName: cat_name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1